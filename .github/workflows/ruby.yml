# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['jruby-9.2.20.1']
        db: ['mysql2']
        test_prefix: ["rails:"]
        ar_version: ["6-1-stable"]
        prepared_statements: ['false', 'true']
        driver: ['MySQL', 'MariaDB']

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306

    env:
      DB: ${{ matrix.db }}
      TEST_PREFIX: ${{ matrix.test_prefix }}
      AR_VERSION: ${{ matrix.ar_version }}
      PREPARED_STATEMENTS: ${{ matrix.prepared_statements }}
      DRIVER: ${{ matrix.driver }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Install dependencies
        run: bundle install --retry 3 --without development
      - name: Setup database
        run: |
          echo "JAVA_OPTS=$JAVA_OPTS"
          export JRUBY_OPTS="-J-Xms64M -J-Xmx1024M"
          rake jar # compiles ext generates: lib/arjdbc/jdbc/adapter_java.jar
          sudo service mysql start
          mysql --version || true # to see if we're using MySQL or MariaDB
          mysql -u root -proot -e "CREATE USER rails@localhost;"
          mysql -u root -proot -e "grant all privileges on activerecord_unittest.* to rails@localhost;"
          mysql -u root -proot -e "grant all privileges on activerecord_unittest2.* to rails@localhost;"
          mysql -u root -proot -e "grant all privileges on inexistent_activerecord_unittest.* to rails@localhost;"
          mysql -u root -proot -e "CREATE DATABASE activerecord_unittest DEFAULT CHARACTER SET utf8mb4;"
          mysql -u root -proot -e "CREATE DATABASE activerecord_unittest2 DEFAULT CHARACTER SET utf8mb4;"
      - name: Run tests
        run: |
          bundle exec rake ${{ env.TEST_PREFIX }}test_${{ env.DB }}